{"abi":[{"type":"function","name":"isValidSignature","inputs":[{"name":"_hash","type":"bytes32","internalType":"bytes32"},{"name":"_signature","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"view"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"isValidSignature(bytes32,bytes)":"1626ba7e"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Abstract contract for validating signatures as per ERC-1271 standard.\",\"kind\":\"dev\",\"methods\":{\"isValidSignature(bytes32,bytes)\":{\"params\":{\"_hash\":\"Hash of the data to be signed.\",\"_signature\":\"Signature byte array associated with the hash.\"},\"returns\":{\"_0\":\"The magic value if the signature is valid, otherwise 0xffffffff.\"}}},\"stateVariables\":{\"MAGICVALUE\":{\"details\":\"Magic value to be returned upon successful signature verification.\"}},\"title\":\"ERC1271\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isValidSignature(bytes32,bytes)\":{\"notice\":\"Returns whether the signature provided is valid for the provided data.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/libs/ERC1271.sol\":\"ERC1271\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@solbase/=lib/solbase/src/\",\":@solmate/=lib/solmate/src/\",\":ds-test/=lib/solbase/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solbase/=lib/solbase/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/solbase/src/utils/ECDSA.sol\":{\"keccak256\":\"0x90537865bcc06a12a273d39fa44835a55838c20f7a2bd0638aa5fd4734fbdef5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b915a07301e6bfc37c4d850f6a259a6edf45632fa5b9014d1bbdaa97e5e5f585\",\"dweb:/ipfs/QmccTfYNBfMMkz4LFxGWUgCFvS27Fo6wPqeRxZXwmqBsQm\"]},\"src/libs/ERC1271.sol\":{\"keccak256\":\"0xb92415a8c6d00741ab2b05ae6c81ede55a1b5aaeb5db41097a026e017b9889fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6740580ed8e1ff26b0ce72b954e1aca9b1e025795a9f6e4223c2c7e6942741a5\",\"dweb:/ipfs/QmQpSBYwxDRuDQKtYiDnW1TxnppoDw5BUW4ERHDQKEwh1s\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.25+commit.b61c2a91"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes32","name":"_hash","type":"bytes32"},{"internalType":"bytes","name":"_signature","type":"bytes"}],"stateMutability":"view","type":"function","name":"isValidSignature","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]}],"devdoc":{"kind":"dev","methods":{"isValidSignature(bytes32,bytes)":{"params":{"_hash":"Hash of the data to be signed.","_signature":"Signature byte array associated with the hash."},"returns":{"_0":"The magic value if the signature is valid, otherwise 0xffffffff."}}},"version":1},"userdoc":{"kind":"user","methods":{"isValidSignature(bytes32,bytes)":{"notice":"Returns whether the signature provided is valid for the provided data."}},"version":1}},"settings":{"remappings":["@openzeppelin/=lib/openzeppelin-contracts/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@solbase/=lib/solbase/src/","@solmate/=lib/solmate/src/","ds-test/=lib/solbase/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","solbase/=lib/solbase/src/","solmate/=lib/solmate/src/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/libs/ERC1271.sol":"ERC1271"},"evmVersion":"cancun","libraries":{}},"sources":{"lib/solbase/src/utils/ECDSA.sol":{"keccak256":"0x90537865bcc06a12a273d39fa44835a55838c20f7a2bd0638aa5fd4734fbdef5","urls":["bzz-raw://b915a07301e6bfc37c4d850f6a259a6edf45632fa5b9014d1bbdaa97e5e5f585","dweb:/ipfs/QmccTfYNBfMMkz4LFxGWUgCFvS27Fo6wPqeRxZXwmqBsQm"],"license":"MIT"},"src/libs/ERC1271.sol":{"keccak256":"0xb92415a8c6d00741ab2b05ae6c81ede55a1b5aaeb5db41097a026e017b9889fa","urls":["bzz-raw://6740580ed8e1ff26b0ce72b954e1aca9b1e025795a9f6e4223c2c7e6942741a5","dweb:/ipfs/QmQpSBYwxDRuDQKtYiDnW1TxnppoDw5BUW4ERHDQKEwh1s"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"src/libs/ERC1271.sol","id":59845,"exportedSymbols":{"ECDSA":[50168],"ERC1271":[59844]},"nodeType":"SourceUnit","src":"32:1310:65","nodes":[{"id":59798,"nodeType":"PragmaDirective","src":"32:23:65","nodes":[],"literals":["solidity","0.8",".25"]},{"id":59800,"nodeType":"ImportDirective","src":"57:49:65","nodes":[],"absolutePath":"lib/solbase/src/utils/ECDSA.sol","file":"@solbase/utils/ECDSA.sol","nameLocation":"-1:-1:-1","scope":59845,"sourceUnit":50169,"symbolAliases":[{"foreign":{"id":59799,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":50168,"src":"66:5:65","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":59844,"nodeType":"ContractDefinition","src":"206:1135:65","nodes":[{"id":59804,"nodeType":"UsingForDirective","src":"238:24:65","nodes":[],"global":false,"libraryName":{"id":59802,"name":"ECDSA","nameLocations":["244:5:65"],"nodeType":"IdentifierPath","referencedDeclaration":50168,"src":"244:5:65"},"typeName":{"id":59803,"name":"bytes32","nodeType":"ElementaryTypeName","src":"254:7:65","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"id":59807,"nodeType":"UsingForDirective","src":"267:22:65","nodes":[],"global":false,"libraryName":{"id":59805,"name":"ECDSA","nameLocations":["273:5:65"],"nodeType":"IdentifierPath","referencedDeclaration":50168,"src":"273:5:65"},"typeName":{"id":59806,"name":"bytes","nodeType":"ElementaryTypeName","src":"283:5:65","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},{"id":59811,"nodeType":"VariableDeclaration","src":"375:48:65","nodes":[],"constant":true,"documentation":{"id":59808,"nodeType":"StructuredDocumentation","src":"295:75:65","text":"@dev Magic value to be returned upon successful signature verification."},"mutability":"constant","name":"MAGICVALUE","nameLocation":"400:10:65","scope":59844,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":59809,"name":"bytes4","nodeType":"ElementaryTypeName","src":"375:6:65","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30783136323662613765","id":59810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"413:10:65","typeDescriptions":{"typeIdentifier":"t_rational_371636862_by_1","typeString":"int_const 371636862"},"value":"0x1626ba7e"},"visibility":"internal"},{"id":59833,"nodeType":"FunctionDefinition","src":"723:253:65","nodes":[],"body":{"id":59832,"nodeType":"Block","src":"828:148:65","nodes":[],"statements":[{"condition":{"arguments":[{"id":59822,"name":"_hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59814,"src":"860:5:65","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":59823,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59816,"src":"867:10:65","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":59821,"name":"_isValidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59843,"src":"842:17:65","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes_calldata_ptr_$returns$_t_bool_$","typeString":"function (bytes32,bytes calldata) view returns (bool)"}},"id":59824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"842:36:65","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":59830,"nodeType":"Block","src":"928:42:65","statements":[{"expression":{"hexValue":"30786666666666666666","id":59828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"949:10:65","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"functionReturnParameters":59820,"id":59829,"nodeType":"Return","src":"942:17:65"}]},"id":59831,"nodeType":"IfStatement","src":"838:132:65","trueBody":{"id":59827,"nodeType":"Block","src":"880:42:65","statements":[{"expression":{"id":59825,"name":"MAGICVALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59811,"src":"901:10:65","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":59820,"id":59826,"nodeType":"Return","src":"894:17:65"}]}}]},"documentation":{"id":59812,"nodeType":"StructuredDocumentation","src":"430:288:65","text":"@notice Returns whether the signature provided is valid for the provided data.\n @param _hash Hash of the data to be signed.\n @param _signature Signature byte array associated with the hash.\n @return The magic value if the signature is valid, otherwise 0xffffffff."},"functionSelector":"1626ba7e","implemented":true,"kind":"function","modifiers":[],"name":"isValidSignature","nameLocation":"732:16:65","parameters":{"id":59817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":59814,"mutability":"mutable","name":"_hash","nameLocation":"757:5:65","nodeType":"VariableDeclaration","scope":59833,"src":"749:13:65","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":59813,"name":"bytes32","nodeType":"ElementaryTypeName","src":"749:7:65","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":59816,"mutability":"mutable","name":"_signature","nameLocation":"779:10:65","nodeType":"VariableDeclaration","scope":59833,"src":"764:25:65","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":59815,"name":"bytes","nodeType":"ElementaryTypeName","src":"764:5:65","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"748:42:65"},"returnParameters":{"id":59820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":59819,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":59833,"src":"820:6:65","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":59818,"name":"bytes4","nodeType":"ElementaryTypeName","src":"820:6:65","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"819:8:65"},"scope":59844,"stateMutability":"view","virtual":true,"visibility":"public"},{"id":59843,"nodeType":"FunctionDefinition","src":"1233:106:65","nodes":[],"documentation":{"id":59834,"nodeType":"StructuredDocumentation","src":"982:246:65","text":"@notice Internal function to validate the signature.\n @param _hash Hash of the data to be signed.\n @param _signature Signature byte array associated with the hash.\n @return True if the signature is valid, false otherwise."},"implemented":false,"kind":"function","modifiers":[],"name":"_isValidSignature","nameLocation":"1242:17:65","parameters":{"id":59839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":59836,"mutability":"mutable","name":"_hash","nameLocation":"1268:5:65","nodeType":"VariableDeclaration","scope":59843,"src":"1260:13:65","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":59835,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1260:7:65","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":59838,"mutability":"mutable","name":"_signature","nameLocation":"1290:10:65","nodeType":"VariableDeclaration","scope":59843,"src":"1275:25:65","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":59837,"name":"bytes","nodeType":"ElementaryTypeName","src":"1275:5:65","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1259:42:65"},"returnParameters":{"id":59842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":59841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":59843,"src":"1333:4:65","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":59840,"name":"bool","nodeType":"ElementaryTypeName","src":"1333:4:65","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1332:6:65"},"scope":59844,"stateMutability":"view","virtual":true,"visibility":"internal"}],"abstract":true,"baseContracts":[],"canonicalName":"ERC1271","contractDependencies":[],"contractKind":"contract","documentation":{"id":59801,"nodeType":"StructuredDocumentation","src":"108:98:65","text":"@title ERC1271\n @dev Abstract contract for validating signatures as per ERC-1271 standard."},"fullyImplemented":false,"linearizedBaseContracts":[59844],"name":"ERC1271","nameLocation":"224:7:65","scope":59845,"usedErrors":[],"usedEvents":[]}],"license":"MIT"},"id":65}