{"abi":[{"type":"function","name":"isAdmin","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isDao","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isGuardian","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isStrategist","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"isAdmin(address)":"24d7806c","isDao(address)":"1f9d8a60","isGuardian(address)":"0c68ba21","isStrategist(address)":"6734faee","owner()":"8da5cb5b"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isDao\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isGuardian\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isStrategist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isAdmin(address)\":{\"params\":{\"account\":\"The address to query for admin status.\"},\"returns\":{\"_0\":\"True if the specified account is an admin, false otherwise.\"}},\"isDao(address)\":{\"params\":{\"account\":\"The address to query for dao status.\"},\"returns\":{\"_0\":\"True if the specified account is a dao, false otherwise.\"}},\"isGuardian(address)\":{\"params\":{\"account\":\"The address to query for guardian status.\"},\"returns\":{\"_0\":\"True if the specified account is a guardian, false otherwise.\"}},\"isStrategist(address)\":{\"params\":{\"account\":\"The address to query for strategist status.\"},\"returns\":{\"_0\":\"True if the specified account is a strategist, false otherwise.\"}},\"owner()\":{\"returns\":{\"_0\":\"The address of the current owner.\"}}},\"title\":\"Interface for Escrow Admin Manager\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isAdmin(address)\":{\"notice\":\"Determines if a given account has admin privileges.\"},\"isDao(address)\":{\"notice\":\"Determines if a given account is assigned the dao role.\"},\"isGuardian(address)\":{\"notice\":\"Determines if a given account is assigned the guardian role.\"},\"isStrategist(address)\":{\"notice\":\"Determines if a given account is assigned the strategist role.\"},\"owner()\":{\"notice\":\"Retrieves the current owner of the contract.\"}},\"notice\":\"Provides interface methods for checking roles in the Escrow Admin Management system.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IEscrowAdminManager.sol\":\"IEscrowAdminManager\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@solbase/=lib/solbase/src/\",\":@solmate/=lib/solmate/src/\",\":ds-test/=lib/solbase/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solbase/=lib/solbase/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"src/interfaces/IEscrowAdminManager.sol\":{\"keccak256\":\"0x5064f56587166c48dbfdf278f1e86d70576812a67ac21ac7b9404ea17cca9ce5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1cccfcc7c21277cbbb31c6fa7441739e6236d00b6e85ce283550582946e6a8f6\",\"dweb:/ipfs/QmXWUZMCa1AjXJcmc9nCTfNEppGeErG2JoXywVd6CknySG\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.25+commit.b61c2a91"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"isAdmin","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"isDao","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"isGuardian","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"isStrategist","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}]}],"devdoc":{"kind":"dev","methods":{"isAdmin(address)":{"params":{"account":"The address to query for admin status."},"returns":{"_0":"True if the specified account is an admin, false otherwise."}},"isDao(address)":{"params":{"account":"The address to query for dao status."},"returns":{"_0":"True if the specified account is a dao, false otherwise."}},"isGuardian(address)":{"params":{"account":"The address to query for guardian status."},"returns":{"_0":"True if the specified account is a guardian, false otherwise."}},"isStrategist(address)":{"params":{"account":"The address to query for strategist status."},"returns":{"_0":"True if the specified account is a strategist, false otherwise."}},"owner()":{"returns":{"_0":"The address of the current owner."}}},"version":1},"userdoc":{"kind":"user","methods":{"isAdmin(address)":{"notice":"Determines if a given account has admin privileges."},"isDao(address)":{"notice":"Determines if a given account is assigned the dao role."},"isGuardian(address)":{"notice":"Determines if a given account is assigned the guardian role."},"isStrategist(address)":{"notice":"Determines if a given account is assigned the strategist role."},"owner()":{"notice":"Retrieves the current owner of the contract."}},"version":1}},"settings":{"remappings":["@openzeppelin/=lib/openzeppelin-contracts/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@solbase/=lib/solbase/src/","@solmate/=lib/solmate/src/","ds-test/=lib/solbase/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","solbase/=lib/solbase/src/","solmate/=lib/solmate/src/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/IEscrowAdminManager.sol":"IEscrowAdminManager"},"evmVersion":"cancun","libraries":{}},"sources":{"src/interfaces/IEscrowAdminManager.sol":{"keccak256":"0x5064f56587166c48dbfdf278f1e86d70576812a67ac21ac7b9404ea17cca9ce5","urls":["bzz-raw://1cccfcc7c21277cbbb31c6fa7441739e6236d00b6e85ce283550582946e6a8f6","dweb:/ipfs/QmXWUZMCa1AjXJcmc9nCTfNEppGeErG2JoXywVd6CknySG"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"src/interfaces/IEscrowAdminManager.sol","id":58888,"exportedSymbols":{"IEscrowAdminManager":[58887]},"nodeType":"SourceUnit","src":"32:1506:58","nodes":[{"id":58847,"nodeType":"PragmaDirective","src":"32:23:58","nodes":[],"literals":["solidity","0.8",".25"]},{"id":58887,"nodeType":"ContractDefinition","src":"200:1337:58","nodes":[{"id":58854,"nodeType":"FunctionDefinition","src":"347:49:58","nodes":[],"documentation":{"id":58849,"nodeType":"StructuredDocumentation","src":"236:106:58","text":"@notice Retrieves the current owner of the contract.\n @return The address of the current owner."},"functionSelector":"8da5cb5b","implemented":false,"kind":"function","modifiers":[],"name":"owner","nameLocation":"356:5:58","parameters":{"id":58850,"nodeType":"ParameterList","parameters":[],"src":"361:2:58"},"returnParameters":{"id":58853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":58854,"src":"387:7:58","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":58851,"name":"address","nodeType":"ElementaryTypeName","src":"387:7:58","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"386:9:58"},"scope":58887,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":58862,"nodeType":"FunctionDefinition","src":"608:63:58","nodes":[],"documentation":{"id":58855,"nodeType":"StructuredDocumentation","src":"402:201:58","text":"@notice Determines if a given account has admin privileges.\n @param account The address to query for admin status.\n @return True if the specified account is an admin, false otherwise."},"functionSelector":"24d7806c","implemented":false,"kind":"function","modifiers":[],"name":"isAdmin","nameLocation":"617:7:58","parameters":{"id":58858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58857,"mutability":"mutable","name":"account","nameLocation":"633:7:58","nodeType":"VariableDeclaration","scope":58862,"src":"625:15:58","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":58856,"name":"address","nodeType":"ElementaryTypeName","src":"625:7:58","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"624:17:58"},"returnParameters":{"id":58861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58860,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":58862,"src":"665:4:58","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":58859,"name":"bool","nodeType":"ElementaryTypeName","src":"665:4:58","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"664:6:58"},"scope":58887,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":58870,"nodeType":"FunctionDefinition","src":"897:66:58","nodes":[],"documentation":{"id":58863,"nodeType":"StructuredDocumentation","src":"677:215:58","text":"@notice Determines if a given account is assigned the guardian role.\n @param account The address to query for guardian status.\n @return True if the specified account is a guardian, false otherwise."},"functionSelector":"0c68ba21","implemented":false,"kind":"function","modifiers":[],"name":"isGuardian","nameLocation":"906:10:58","parameters":{"id":58866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58865,"mutability":"mutable","name":"account","nameLocation":"925:7:58","nodeType":"VariableDeclaration","scope":58870,"src":"917:15:58","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":58864,"name":"address","nodeType":"ElementaryTypeName","src":"917:7:58","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"916:17:58"},"returnParameters":{"id":58869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58868,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":58870,"src":"957:4:58","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":58867,"name":"bool","nodeType":"ElementaryTypeName","src":"957:4:58","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"956:6:58"},"scope":58887,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":58878,"nodeType":"FunctionDefinition","src":"1195:68:58","nodes":[],"documentation":{"id":58871,"nodeType":"StructuredDocumentation","src":"969:221:58","text":"@notice Determines if a given account is assigned the strategist role.\n @param account The address to query for strategist status.\n @return True if the specified account is a strategist, false otherwise."},"functionSelector":"6734faee","implemented":false,"kind":"function","modifiers":[],"name":"isStrategist","nameLocation":"1204:12:58","parameters":{"id":58874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58873,"mutability":"mutable","name":"account","nameLocation":"1225:7:58","nodeType":"VariableDeclaration","scope":58878,"src":"1217:15:58","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":58872,"name":"address","nodeType":"ElementaryTypeName","src":"1217:7:58","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1216:17:58"},"returnParameters":{"id":58877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58876,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":58878,"src":"1257:4:58","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":58875,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:58","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:58"},"scope":58887,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":58886,"nodeType":"FunctionDefinition","src":"1474:61:58","nodes":[],"documentation":{"id":58879,"nodeType":"StructuredDocumentation","src":"1269:200:58","text":"@notice Determines if a given account is assigned the dao role.\n @param account The address to query for dao status.\n @return True if the specified account is a dao, false otherwise."},"functionSelector":"1f9d8a60","implemented":false,"kind":"function","modifiers":[],"name":"isDao","nameLocation":"1483:5:58","parameters":{"id":58882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58881,"mutability":"mutable","name":"account","nameLocation":"1497:7:58","nodeType":"VariableDeclaration","scope":58886,"src":"1489:15:58","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":58880,"name":"address","nodeType":"ElementaryTypeName","src":"1489:7:58","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1488:17:58"},"returnParameters":{"id":58885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58884,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":58886,"src":"1529:4:58","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":58883,"name":"bool","nodeType":"ElementaryTypeName","src":"1529:4:58","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1528:6:58"},"scope":58887,"stateMutability":"view","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"IEscrowAdminManager","contractDependencies":[],"contractKind":"interface","documentation":{"id":58848,"nodeType":"StructuredDocumentation","src":"57:143:58","text":"@title Interface for Escrow Admin Manager\n @notice Provides interface methods for checking roles in the Escrow Admin Management system."},"fullyImplemented":false,"linearizedBaseContracts":[58887],"name":"IEscrowAdminManager","nameLocation":"210:19:58","scope":58888,"usedErrors":[],"usedEvents":[]}],"license":"MIT"},"id":58}